<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2a286ad6-5e87-4f51-bfac-0179608ee056" name="Changes" comment="Criação da entidade User,UserRepository, e TokenService">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/dto/Data.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/dto/Data.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/dto/UsernameDto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/dto/UsernameDto.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/entity/Music.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/entity/Music.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/entity/Playlist.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/ciandt/summit/bootcamp2022/entity/Playlist.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/java/com/ciandt/summit/bootcamp2022/services/PlaylistServiceImplTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/com/ciandt/summit/bootcamp2022/services/PlaylistServiceImplTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/dto/Data.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/dto/Data.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/dto/UsernameDto.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/dto/UsernameDto.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/entity/Music.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/entity/Music.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/entity/Playlist.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/ciandt/summit/bootcamp2022/entity/Playlist.class" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$/.." value="dev" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="JpbToolWindowState">
    <option name="myId2FirstActivated">
      <map>
        <entry key="com.haulmont.jpb.jpaInspector" value="true" />
        <entry key="com.haulmont.jpb.jpaPalette" value="true" />
        <entry key="com.haulmont.jpb.jpaStructure" value="true" />
      </map>
    </option>
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.jpb.jpaInspector" value="false" />
        <entry key="com.haulmont.jpb.jpaPalette" value="false" />
        <entry key="com.haulmont.jpb.jpaStructure" value="false" />
      </map>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="2DXA8pun7Dd17bLqtnfFrE5B90A" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Git.Branch.Popup.ShowAllRemotes": "true",
    "LombokPluginIS_LOMBOK_JPS_FIX_ENABLED": "true",
    "LombokPluginIS_LOMBOK_VERSION_CHECK_Enabled": "true",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "last_opened_file_path": "/home/miguelj/IdeaProjects/tc-hbtn_teste/0x01/mei",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.0",
    "settings.editor.selected.configurable": "Lombok"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/resources" />
      <recent name="$PROJECT_DIR$/src/test" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/main/resources" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean install" />
    </option>
  </component>
  <component name="RunManager" selected="JUnit.PlaylistServiceImplTest.ShouldReturnMusicAlreadyExistExceptionWhenMusicIsAlreadyInPlaylist">
    <configuration name="PlaylistServiceImplTest.ShouldReturnInvalidLogDataExceptionWhenInvalidToken" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="summit-bootcamp" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ciandt.summit.bootcamp2022.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ciandt.summit.bootcamp2022.services" />
      <option name="MAIN_CLASS_NAME" value="com.ciandt.summit.bootcamp2022.services.PlaylistServiceImplTest" />
      <option name="METHOD_NAME" value="ShouldReturnInvalidLogDataExceptionWhenInvalidToken" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlaylistServiceImplTest.ShouldReturnInvalidLogDataExceptionWhenInvalidUsername" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="summit-bootcamp" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ciandt.summit.bootcamp2022.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ciandt.summit.bootcamp2022.services" />
      <option name="MAIN_CLASS_NAME" value="com.ciandt.summit.bootcamp2022.services.PlaylistServiceImplTest" />
      <option name="METHOD_NAME" value="ShouldReturnInvalidLogDataExceptionWhenInvalidUsername" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlaylistServiceImplTest.ShouldReturnMusicAlreadyExistExceptionWhenMusicIsAlreadyInPlaylist" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="summit-bootcamp" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ciandt.summit.bootcamp2022.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ciandt.summit.bootcamp2022.services" />
      <option name="MAIN_CLASS_NAME" value="com.ciandt.summit.bootcamp2022.services.PlaylistServiceImplTest" />
      <option name="METHOD_NAME" value="ShouldReturnMusicAlreadyExistExceptionWhenMusicIsAlreadyInPlaylist" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlaylistServiceImplTest.shouldRertunNotFoundWhenNotExistsMusicDtoId" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="summit-bootcamp" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ciandt.summit.bootcamp2022.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ciandt.summit.bootcamp2022.services" />
      <option name="MAIN_CLASS_NAME" value="com.ciandt.summit.bootcamp2022.services.PlaylistServiceImplTest" />
      <option name="METHOD_NAME" value="shouldRertunNotFoundWhenNotExistsMusicDtoId" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PlaylistServiceImplTest.shouldRertunNotFoundWhenNotExistsPlaylistId" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="summit-bootcamp" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.ciandt.summit.bootcamp2022.services.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="com.ciandt.summit.bootcamp2022.services" />
      <option name="MAIN_CLASS_NAME" value="com.ciandt.summit.bootcamp2022.services.PlaylistServiceImplTest" />
      <option name="METHOD_NAME" value="shouldRertunNotFoundWhenNotExistsPlaylistId" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.PlaylistServiceImplTest.ShouldReturnMusicAlreadyExistExceptionWhenMusicIsAlreadyInPlaylist" />
        <item itemvalue="JUnit.PlaylistServiceImplTest.ShouldReturnInvalidLogDataExceptionWhenInvalidToken" />
        <item itemvalue="JUnit.PlaylistServiceImplTest.ShouldReturnInvalidLogDataExceptionWhenInvalidUsername" />
        <item itemvalue="JUnit.PlaylistServiceImplTest.shouldRertunNotFoundWhenNotExistsMusicDtoId" />
        <item itemvalue="JUnit.PlaylistServiceImplTest.shouldRertunNotFoundWhenNotExistsPlaylistId" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2a286ad6-5e87-4f51-bfac-0179608ee056" name="Changes" comment="" />
      <created>1660834898734</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1660834898734</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="feature/BOOT-767" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>